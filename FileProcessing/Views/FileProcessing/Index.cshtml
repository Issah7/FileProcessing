@model FileProcessingModel

<h2>File Processing</h2>

<div class="grid-container">
    <!-- Batch Rename Files Card -->
    <div class="card">
        <div class="card-header">
            <h3>Batch Rename Files</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("BatchRename", "FileProcessing", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="file" name="Files" multiple />
                <input type="text" name="DestinationDirectory" placeholder="Enter destination folder path" />
                <input type="submit" value="Batch Rename" />
            }



        </div>
    </div>

    <!-- File Organization Card -->
    <div class="card">
        <div class="card-header">
            <h3>File Organization</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("FileOrganization", "FileProcessing", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="text" name="DestinationDirectory" placeholder="Destination Directory" />
                
                <input type="submit" value="Organize Files" />
            }
        </div>
    </div>

    <!-- File Format Conversion Card -->
    <div class="card">
        <div class="card-header">
            <h3>File Format Conversion</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("FileFormatConversion", "FileProcessing", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-group">
                    <label for="fileInput">Select File:</label>
                    <input type="file" name="Files" multiple class="form-control" id="fileInput" />
                </div>
                <div class="form-group">
                    <label for="formatSelect">Select Format:</label>
                    <select name="SelectedFormat" class="form-control" id="formatSelect">
                        <option value="PDF">PDF</option>
                        <option value="Word">Word (.docx)</option>
                        <option value="Excel">Excel (.xlsx)</option>
                        <option value="CSV">CSV (.csv)</option>
                        <option value="Image">Image (.png)</option>
                        <option value="Presentation">Presentation (.pptx)</option>
                        <option value="Zip">Zip Archive (.zip)</option>
                        <option value="Email">Email (.eml)</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="destinationDirectory">Destination Directory:</label>
                    <input type="text" name="DestinationDirectory" class="form-control" id="destinationDirectory" placeholder="Destination Directory" />
                </div>
                <button type="submit" class="btn btn-primary">Convert Format</button>
            }
        </div>
    </div>


    <!-- Duplicate File Check Card -->
    <div class="card">
        <div class="card-header">
            <h3>Duplicate File Check</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("DuplicateFileCheck", "FileProcessing", FormMethod.Post))
            {
                <input type="text" name="DestinationDirectory" placeholder="Directory Path" />
                <input type="submit" value="Check Duplicates" />
            }
        </div>
    </div>
</div>

<!-- Display Messages and Results -->
<div>
    @if (ViewBag.Message != null)
    {
        <p class="alert alert-success">@ViewBag.Message</p>
    }

    @if (ViewBag.Duplicates != null)
    {
        <h4>Duplicate Files:</h4>
        <ul>
            @foreach (var group in ViewBag.Duplicates)
            {
                <li>@string.Join(", ", group.Value)</li>
            }
        </ul>
    }
</div>
